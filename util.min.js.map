{"version":3,"sources":["/source/header.ts","/source/export.ts","/source/cloudinary/cloudinary.ts","util.js","/source/test/test.ts"],"names":["Cloudinary","Export","Export.factory","setConfig","Cloudinary.setConfig","Cloudinary.prepareBackgroundImageUrl","Cloudinary.prepareImageUrl","Cloudinary.preparePreviewImageUrl","Cloudinary.padding","Cloudinary.crop","factory","Test","Test.message"],"mappings":"CAAA;;;;;ACIA,GCEOA,GDFPC,EAAA,WAAAA,QAAAA,MAkBAA,MAjBSA,GAAAA,QAAPA,SAAeA,EAAMA,GACIC,gBAAZA,UAA0CA,mBAAXA,QACxCA,OAAOA,QAAQA,GAAQA,EACKA,gBAAZA,SAChBA,QAAQA,OAAOA,iBAAmBA,MAAUA,SAASA,EAAMA,IAEtDA,OAAOA,cACVA,OAAOA,gBAGJA,OAAOA,YAAYA,OACtBA,OAAOA,YAAYA,SAGrBA,OAAOA,YAAYA,KAAKA,GAAQA,IAGtCD,MChBA,SAAOD,GC+BH,QAASG,GDvBeH,GACxBI,IAAKA,IAAYA,EAAQA,YAAaA,EAAQA,aAAcA,EAAQA,QAAQA,QAAQA,QAAaA,GAC/FA,KAAMA,IAAIA,OAAMA,mDAKlBA,GAASA,EAGXJ,QAAAA,GAA0CA,EAAkBA,EAAeA,EAAgBA,EAAcA,GACvGK,IAAKA,EACHA,MAAOA,EAGTA,IAAIA,GAAMA,EAAOA,OAASA,IAAMA,EAAOA,YAAcA,QAGnDA,IAD+BA,KAA7BA,EAASA,QAAQA,QACZA,SAEAA,SAGTA,IAAIA,GACAA,EAASA,EAAcA,IAAPA,EAAaA,CAOjCA,QALAA,KACAA,EAAaA,KAAKA,KAAOA,GACzBA,EAAaA,KAAKA,UAClBA,EAAaA,KAAKA,KAAOA,GAEjBA,GACNA,IAAKA,OACHA,EAAaA,KAAKA,SAClBA,MACFA,KAAKA,MACHA,EAAaA,KAAKA,QAClBA,MACFA,KAAKA,WACHA,EAAaA,KAAKA,UAClBA,MACFA,KAAKA,QACHA,EAAaA,KAAKA,WAYtBA,MARAA,GAAaA,KAAKA,WAClBA,EAAaA,KAAKA,UAAYA,GAC9BA,GAAOA,IAAMA,EAAaA,KAAKA,KAEEA,KAA7BA,EAASA,QAAQA,UACnBA,GAAOA,IAAMA,EAAOA,cAGfA,EAAMA,IAAMA,EAGrBL,QAAAA,GAAgCA,EAAkBA,EAAeA,GAC/DM,IAAKA,EACHA,MAAOA,EAGTA,IAAIA,GAAMA,EAAOA,OAASA,IAAMA,EAAOA,YAAcA,QAGnDA,IAD+BA,KAA7BA,EAASA,QAAQA,QACZA,SAEAA,SAGTA,IAAIA,GAEAA,EAASA,KAAKA,MAAMA,EAAQA,EAAUA,gBAEtCA,EAAaA,KAAKA,MAAMA,EAAQA,EAAUA,MAAQA,KAClDA,EAAcA,KAAKA,MAAMA,EAAQA,EAAUA,OAAUA,KAErDA,EAAYA,KAAKA,MAAMA,EAAQA,EAAUA,KAAOA,KAChDA,EAAWA,KAAKA,MAAMA,EAASA,EAAUA,IAAMA,IA6BnDA,OA3BAA,MACAA,EAAaA,KAAKA,KAAOA,GACzBA,EAAaA,KAAKA,SAClBA,EAAaA,KAAKA,QAClBA,EAAaA,KAAKA,WAClBA,GAAOA,IAAMA,EAAaA,KAAKA,KAG/BA,KACAA,EAAaA,KAAKA,KAAOA,EAAQA,EAAYA,EAAOA,IACpDA,EAAaA,KAAKA,KAAOA,EAAQA,EAAaA,EAAQA,IACtDA,EAAaA,KAAKA,UAClBA,GAAOA,IAAMA,EAAaA,KAAKA,KAG/BA,KACAA,EAAaA,KAAKA,KAAOA,GACzBA,EAAaA,KAAKA,KAAOA,GACzBA,EAAaA,KAAKA,KAAOA,EAAKA,EAAYA,EAAOA,IACjDA,EAAaA,KAAKA,KAAOA,EAAKA,EAAaA,EAAQA,IACnDA,EAAaA,KAAKA,UAClBA,GAAOA,IAAMA,EAAaA,KAAKA,KAEEA,KAA7BA,EAASA,QAAQA,UACnBA,GAAOA,IAAMA,EAAOA,cAGfA,EAAMA,IAAMA,EAGrBN,QAAAA,GAAuCA,EAAkBA,GACvDO,IAAKA,EACDA,MAAOA,EAGXA,IAAIA,GAAMA,EAAOA,OAASA,IAAMA,EAAOA,YAAcA,QAGjDA,IAD6BA,KAA7BA,EAASA,QAAQA,QACVA,SAEAA,SAGXA,IAAIA,EAcJA,OAZAA,MACAA,EAAaA,KAAKA,KAAOA,GACzBA,EAAaA,KAAKA,UAElBA,EAAaA,KAAKA,QAClBA,EAAaA,KAAKA,WAClBA,GAAOA,IAAMA,EAAaA,KAAKA,KAEEA,KAA7BA,EAASA,QAAQA,UACjBA,GAAOA,IAAMA,EAAOA,cAGjBA,EAAMA,IAAMA,EAGrBP,QAAAA,GAAiBA,EAAmBA,EAAoBA,GACtDQ,GAAIA,GAAaA,EAAaA,EAAQA,CAEtCA,OAAaA,IAATA,GAA4BA,GAAdA,EACTA,EAGLA,EAAQA,EACHA,EAAYA,EAAIA,EAEhBA,EAAYA,EAAIA,EAI3BR,QAAAA,GAAcA,EAAmBA,EAAoBA,GACnDS,GAAIA,GAAaA,EAAaA,EAAQA,CAGtCA,OAAIA,GAAIA,GAASA,EAAIA,GACXA,EAKNA,GAASA,EACJA,EAKLA,EAAaA,EACRA,EAAaA,EADtBA,OAjLFT,GAAIA,EAOYA,GAAAA,UAASA,EAUTA,EAAAA,0BAAyBA,EA+CzBA,EAAAA,gBAAeA,EAqDfA,EAAAA,uBAAsBA,GAtHjCA,IAAAA,OAwLPC,EAAOS,QAAQ,aAAcV,EE9L7B,IAAAW,GAAA,WAAAA,QAAAA,MAIAA,MAHSA,GAAAA,QAAPA,SAAeA,GACbC,QAAQA,IAAIA,IAEhBD,IAEAV,GAAOS,QAAQ,OAAQC","file":"util.min.js","sourcesContent":["/*!\n * 4screens-util v0.1.3\n * (c) 2015 Nopattern sp. z o.o.\n * License: proprietary\n */\n","declare var exports: any;\ndeclare var module: any;\ndeclare var angular: any;\n\nclass Export {\n  static factory(name, factory) {\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports[name] = factory;\n    } else if (typeof angular === 'object') {\n      angular.module('4screens.util.' + name, []).constant(name, factory);\n    } else {\n      if (!window['4screens']) {\n        window['4screens'] = {};\n      }\n\n      if (!window['4screens'].util) {\n        window['4screens'].util = {};\n      }\n\n      window['4screens'].util[name] = factory;\n    }\n  }\n}\n",null,"(function() {/*!\n * 4screens-util v0.1.3\n * (c) 2015 Nopattern sp. z o.o.\n * License: proprietary\n */\n\nvar Export = (function () {\n    function Export() {\n    }\n    Export.factory = function (name, factory) {\n        if (typeof exports === 'object' && typeof module !== 'undefined') {\n            module.exports[name] = factory;\n        }\n        else if (typeof angular === 'object') {\n            angular.module('4screens.util.' + name, []).constant(name, factory);\n        }\n        else {\n            if (!window['4screens']) {\n                window['4screens'] = {};\n            }\n            if (!window['4screens'].util) {\n                window['4screens'].util = {};\n            }\n            window['4screens'].util[name] = factory;\n        }\n    };\n    return Export;\n})();\n\nvar Cloudinary;\n(function (Cloudinary) {\n    var config;\n    /**\n     * Changes the account configuration of the module.\n     *\n     * @param {Config.ApiConfig.cloudinary} options Account data for accessing the CLoudinary service.\n     */\n    function setConfig(options) {\n        if (!options || [options.accountName, options.uploadFolder, options.domain].indexOf(undefined) > -1) {\n            throw new Error('Missing properties in the Cloudinary API config.');\n        }\n        // This is a hack. Module has to have a reference to the ApiOptions.cloudinary object, since it is\n        // overwritten by the config retrieved later.\n        config = options;\n    }\n    Cloudinary.setConfig = setConfig;\n    function prepareBackgroundImageUrl(filepath, width, height, blur, position) {\n        if (!filepath) {\n            return '';\n        }\n        var src = config.domain + '/' + config.accountName + '/image';\n        if (filepath.indexOf('http') !== -1) {\n            src += '/fetch';\n        }\n        else {\n            src += '/upload';\n        }\n        var manipulation;\n        var blured = blur ? blur * 100 : 0;\n        manipulation = [];\n        manipulation.push('w_' + width);\n        manipulation.push('f_auto');\n        manipulation.push('h_' + height);\n        switch (position) {\n            case 'fill':\n                manipulation.push('c_fill');\n                break;\n            case 'fit':\n                manipulation.push('c_fit');\n                break;\n            case 'centered':\n                manipulation.push('c_limit');\n                break;\n            case 'tiled':\n                manipulation.push('c_limit');\n                break;\n        }\n        manipulation.push('dpr_1.0');\n        manipulation.push('e_blur:' + blured);\n        src += '/' + manipulation.join(',');\n        if (filepath.indexOf('http') === -1) {\n            src += '/' + config.uploadFolder;\n        }\n        return src + '/' + filepath;\n    }\n    Cloudinary.prepareBackgroundImageUrl = prepareBackgroundImageUrl;\n    function prepareImageUrl(filepath, width, imageData) {\n        if (!filepath) {\n            return '';\n        }\n        var src = config.domain + '/' + config.accountName + '/image';\n        if (filepath.indexOf('http') !== -1) {\n            src += '/fetch';\n        }\n        else {\n            src += '/upload';\n        }\n        var manipulation;\n        // calculate image height (in percent)\n        var height = Math.round(width * imageData.containerRatio);\n        // calculate image size (in pixel)\n        var imageWidth = Math.round(width * imageData.width / 100);\n        var imageHeight = Math.round(width * imageData.height / 100);\n        // calculate image shift (in pixel)\n        var shiftLeft = Math.round(width * imageData.left / 100);\n        var shiftTop = Math.round(height * imageData.top / 100);\n        manipulation = [];\n        manipulation.push('w_' + imageWidth);\n        manipulation.push('f_png');\n        manipulation.push('q_82');\n        manipulation.push('dpr_1.0');\n        src += '/' + manipulation.join(',');\n        // add image padding if exists\n        manipulation = [];\n        manipulation.push('w_' + padding(imageWidth, width, shiftLeft));\n        manipulation.push('h_' + padding(imageHeight, height, shiftTop));\n        manipulation.push('c_mpad');\n        src += '/' + manipulation.join(',');\n        // crop image to distributed size\n        manipulation = [];\n        manipulation.push('w_' + width);\n        manipulation.push('h_' + height);\n        manipulation.push('x_' + crop(imageWidth, width, shiftLeft));\n        manipulation.push('y_' + crop(imageHeight, height, shiftTop));\n        manipulation.push('c_crop');\n        src += '/' + manipulation.join(',');\n        if (filepath.indexOf('http') === -1) {\n            src += '/' + config.uploadFolder;\n        }\n        return src + '/' + filepath;\n    }\n    Cloudinary.prepareImageUrl = prepareImageUrl;\n    function preparePreviewImageUrl(filepath, width) {\n        if (!filepath) {\n            return '';\n        }\n        var src = config.domain + '/' + config.accountName + '/image';\n        if (filepath.indexOf('http') !== -1) {\n            src += '/fetch';\n        }\n        else {\n            src += '/upload';\n        }\n        var manipulation;\n        manipulation = [];\n        manipulation.push('w_' + width);\n        manipulation.push('f_auto');\n        manipulation.push('q_82');\n        manipulation.push('dpr_1.0');\n        src += '/' + manipulation.join(',');\n        if (filepath.indexOf('http') === -1) {\n            src += '/' + config.uploadFolder;\n        }\n        return src + '/' + filepath;\n    }\n    Cloudinary.preparePreviewImageUrl = preparePreviewImageUrl;\n    function padding(imageSize, outputSize, shift) {\n        var shiftAfter = outputSize - shift - imageSize;\n        if (shift <= 0 && shiftAfter <= 0) {\n            return imageSize;\n        }\n        if (shift > shiftAfter) {\n            return imageSize + 2 * shift;\n        }\n        else {\n            return imageSize + 2 * shiftAfter;\n        }\n    }\n    function crop(imageSize, outputSize, shift) {\n        var shiftAfter = outputSize - shift - imageSize;\n        // without padding\n        if (0 > shift && 0 > shiftAfter) {\n            return -shift;\n        }\n        // padding only before\n        // padding both side (before bigger)\n        if (shift >= shiftAfter) {\n            return 0;\n        }\n        // padding only after\n        // padding both side (after bigger)\n        if (shiftAfter > shift) {\n            return shiftAfter - shift;\n        }\n    }\n})(Cloudinary || (Cloudinary = {}));\nExport.factory('cloudinary', Cloudinary);\n\nvar Test = (function () {\n    function Test() {\n    }\n    Test.message = function (data) {\n        console.log(data);\n    };\n    return Test;\n})();\nExport.factory('test', Test);\n})();\n//# sourceMappingURL=util.js.map",null],"sourceRoot":"/source/"}